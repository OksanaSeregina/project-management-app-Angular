/* You can add global styles to this file, and also import other style files */
@import './styles/styles.scss';

html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: $font-comfortaa;
  background-color: $light-blue;
}

.mat-dialog-container {
  background: $gray;
}

/** Button **/
.btn-multicolor {
  min-width: 120px;
  height: 40px;
  border: none;
  outline: none;
  font-family: $font-josefin;
  font-size: 16px;
  color: #fff;
  background: $green;
  cursor: pointer;
  position: relative;
  z-index: 0;
  border-radius: 10px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.btn-multicolor:before {
  content: '';
  background: linear-gradient(45deg, #ff0000, #ff7300, #fffb00, #48ff00, #00ffd5, #002bff, #7a00ff, #ff00c8, #ff0000);
  position: absolute;
  top: -2px;
  left: -2px;
  background-size: 400%;
  z-index: -1;
  filter: blur(5px);
  width: calc(100% + 4px);
  height: calc(100% + 4px);
  animation: glowing 20s linear infinite;
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
  border-radius: 10px;
}

.btn-multicolor:active {
  color: #000;
}

.btn-multicolor:active:after {
  background: transparent;
}

.btn-multicolor:hover:before {
  opacity: 1;
}

.btn-multicolor:disabled {
  opacity: 0.5;
  pointer-events: none;
}

.btn-multicolor:after {
  z-index: -1;
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  background: $green;
  left: 0;
  top: 0;
  border-radius: 5px;
}

@keyframes glowing {
  0% {
    background-position: 0 0;
  }
  50% {
    background-position: 400% 0;
  }
  100% {
    background-position: 0 0;
  }
}

/** Form **/
.form__input_wrapper {
  display: flex;
  flex: 1 0 6.125rem;
  flex-direction: column;
  gap: 0.3em;
  width: 80%;
  color: $light-blue;

  mat-form-field.mat-form-field,
  .mat-form-field.mat-form-field-invalid {
    font-family: $font-comfortaa;

    &.mat-focused {
      .mat-form-field-label {
        color: $light-blue;
      }
      .mat-form-field-ripple {
        background-color: $light-blue !important;
      }
    }
    .mat-form-field-label,
    .mat-form-field-label.mat-focused,
    .mat-form-field.mat-focused.matform-field-should-float {
      color: $light-blue;
    }
    .mat-form-field-underline,
    .mat-form-field-underline.mat-focused {
      background-color: $light-blue;
    }
  }
}

.form__form {
  width: 40vw;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  background-color: $gray;
  padding: 1.2rem 0;
  border-radius: 5px;
}

/** Tooltip **/
*[data-tooltip]:hover {
  position: relative;
}
*[data-tooltip]:hover::before {
  content: '';
  position: absolute;
  top: -6px;
  left: 50%;
  transform: translateX(-50%);
  border-width: 4px 6px 0 6px;
  border-style: solid;
  border-color: $gray transparent transparent transparent;
  z-index: 100;
}
*[data-tooltip]:hover::after {
  content: attr(data-tooltip);
  position: absolute;
  font-weight: normal;
  left: 50%;
  top: -6px;
  transform: translateX(-50%) translateY(-100%);
  background: $gray;
  color: $ice-blue;
  padding: 6px;
  font-size: 14px;
  min-width: 120px;
  border-radius: 5px;
  pointer-events: none;
}

*[data-tooltip-position='left']:hover::before{
  left: 0%;
  top: 50%;
  margin-left: -12px;
  transform:translateY(-50%) rotate(-90deg)
}
*[data-tooltip-position='top']:hover::before{
  left: 50%;
}
*[data-tooltip-position='bottom']:hover::before{
  top: 100%;
  margin-top: 8px;
  transform: translateX(-50%) translateY(-100%) rotate(-180deg)
}
*[data-tooltip-position='right']:hover::before{
  left: 100%;
  top: 50%;
  margin-left: 1px;
  transform:translateY(-50%) rotate(90deg)
}
*[data-tooltip-position='left']:hover::after{
  left: 0%;
  top: 50%;
  margin-left: -8px;
  transform: translateX(-100%) translateY(-50%);
}
*[data-tooltip-position='top']:hover::after{
  left: 50%;
}
*[data-tooltip-position='bottom']:hover::after{
  top: 100%;
  margin-top: 8px;
  transform: translateX(-50%) translateY(0%);
}
*[data-tooltip-position='right']:hover::after{
  left: 100%;
  top: 50%;
  margin-left: 8px;
  transform: translateX(0%) translateY(-50%);
}
